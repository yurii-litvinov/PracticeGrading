CREATE TABLE "Criteria" (
                            "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                            "Name" text NOT NULL,
                            "Comment" text,
                            CONSTRAINT "PK_Criteria" PRIMARY KEY ("Id")
);


CREATE TABLE "Meetings" (
                            "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                            "DateAndTime" timestamp with time zone NOT NULL,
                            "Auditorium" text,
                            "Info" text,
                            "CallLink" text,
                            "MaterialsLink" text,
                            CONSTRAINT "PK_Meetings" PRIMARY KEY ("Id")
);


CREATE TABLE "Role" (
                        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                        "RoleName" text NOT NULL,
                        CONSTRAINT "PK_Role" PRIMARY KEY ("Id")
);


CREATE TABLE "CriteriaMeeting" (
                                   "CriteriaId" integer NOT NULL,
                                   "MeetingsId" integer NOT NULL,
                                   CONSTRAINT "PK_CriteriaMeeting" PRIMARY KEY ("CriteriaId", "MeetingsId"),
                                   CONSTRAINT "FK_CriteriaMeeting_Criteria_CriteriaId" FOREIGN KEY ("CriteriaId") REFERENCES "Criteria" ("Id") ON DELETE CASCADE,
                                   CONSTRAINT "FK_CriteriaMeeting_Meetings_MeetingsId" FOREIGN KEY ("MeetingsId") REFERENCES "Meetings" ("Id") ON DELETE CASCADE
);


CREATE TABLE "StudentWork" (
                               "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                               "StudentName" text NOT NULL,
                               "Theme" text NOT NULL,
                               "Supervisor" text NOT NULL,
                               "Consultant" text,
                               "Reviewer" text,
                               "SupervisorMark" integer,
                               "ReviewerMark" integer,
                               "FinalMark" integer,
                               "CodeLink" text,
                               "MeetingId" integer NOT NULL,
                               CONSTRAINT "PK_StudentWork" PRIMARY KEY ("Id"),
                               CONSTRAINT "FK_StudentWork_Meetings_MeetingId" FOREIGN KEY ("MeetingId") REFERENCES "Meetings" ("Id") ON DELETE CASCADE
);


CREATE TABLE "Users" (
                         "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                         "UserName" text NOT NULL,
                         "PasswordHash" text,
                         "RoleId" integer NOT NULL,
                         "MeetingId" integer,
                         CONSTRAINT "PK_Users" PRIMARY KEY ("Id"),
                         CONSTRAINT "FK_Users_Meetings_MeetingId" FOREIGN KEY ("MeetingId") REFERENCES "Meetings" ("Id") ON DELETE CASCADE,
                         CONSTRAINT "FK_Users_Role_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Role" ("Id") ON DELETE CASCADE
);


CREATE TABLE "AverageCriteriaMark" (
                                       "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                                       "StudentWorkId" integer NOT NULL,
                                       "CriteriaId" integer NOT NULL,
                                       "AverageMark" integer NOT NULL,
                                       CONSTRAINT "PK_AverageCriteriaMark" PRIMARY KEY ("Id"),
                                       CONSTRAINT "FK_AverageCriteriaMark_Criteria_CriteriaId" FOREIGN KEY ("CriteriaId") REFERENCES "Criteria" ("Id") ON DELETE CASCADE,
                                       CONSTRAINT "FK_AverageCriteriaMark_StudentWork_StudentWorkId" FOREIGN KEY ("StudentWorkId") REFERENCES "StudentWork" ("Id") ON DELETE CASCADE
);


CREATE TABLE "MemberMarks" (
                               "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                               "MemberId" integer NOT NULL,
                               "StudentWorkId" integer NOT NULL,
                               "Mark" integer NOT NULL,
                               CONSTRAINT "PK_MemberMarks" PRIMARY KEY ("Id"),
                               CONSTRAINT "FK_MemberMarks_StudentWork_StudentWorkId" FOREIGN KEY ("StudentWorkId") REFERENCES "StudentWork" ("Id") ON DELETE CASCADE,
                               CONSTRAINT "FK_MemberMarks_Users_MemberId" FOREIGN KEY ("MemberId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);


CREATE TABLE "CriteriaMark" (
                                "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                                "CriteriaId" integer NOT NULL,
                                "MemberMarkId" integer NOT NULL,
                                "Comment" text,
                                "AverageCriteriaMarkId" integer,
                                "Mark" integer NOT NULL,
                                CONSTRAINT "PK_CriteriaMark" PRIMARY KEY ("Id"),
                                CONSTRAINT "FK_CriteriaMark_AverageCriteriaMark_AverageCriteriaMarkId" FOREIGN KEY ("AverageCriteriaMarkId") REFERENCES "AverageCriteriaMark" ("Id"),
                                CONSTRAINT "FK_CriteriaMark_Criteria_CriteriaId" FOREIGN KEY ("CriteriaId") REFERENCES "Criteria" ("Id") ON DELETE CASCADE,
                                CONSTRAINT "FK_CriteriaMark_MemberMarks_MemberMarkId" FOREIGN KEY ("MemberMarkId") REFERENCES "MemberMarks" ("Id") ON DELETE CASCADE
);


CREATE TABLE "Rule" (
                        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                        "Description" text NOT NULL,
                        "Value" integer NOT NULL,
                        "IsScaleRule" boolean NOT NULL,
                        "CriteriaId" integer NOT NULL,
                        "CriteriaMarkId" integer,
                        CONSTRAINT "PK_Rule" PRIMARY KEY ("Id"),
                        CONSTRAINT "FK_Rule_CriteriaMark_CriteriaMarkId" FOREIGN KEY ("CriteriaMarkId") REFERENCES "CriteriaMark" ("Id") ON DELETE SET NULL,
                        CONSTRAINT "FK_Rule_Criteria_CriteriaId" FOREIGN KEY ("CriteriaId") REFERENCES "Criteria" ("Id") ON DELETE CASCADE
);


INSERT INTO "Role" ("Id", "RoleName")
VALUES (1, 'admin');
INSERT INTO "Role" ("Id", "RoleName")
VALUES (2, 'member');


INSERT INTO "Users" ("Id", "MeetingId", "PasswordHash", "RoleId", "UserName")
VALUES (1, NULL, '$2a$11$0CCsMkYMzLq/5/tvvlwb/OpAaYuXul1te/yuKAYm9unI5fehP5r82', 1, 'admin');


CREATE INDEX "IX_AverageCriteriaMark_CriteriaId" ON "AverageCriteriaMark" ("CriteriaId");


CREATE INDEX "IX_AverageCriteriaMark_StudentWorkId" ON "AverageCriteriaMark" ("StudentWorkId");


CREATE INDEX "IX_CriteriaMark_AverageCriteriaMarkId" ON "CriteriaMark" ("AverageCriteriaMarkId");


CREATE INDEX "IX_CriteriaMark_CriteriaId" ON "CriteriaMark" ("CriteriaId");


CREATE INDEX "IX_CriteriaMark_MemberMarkId" ON "CriteriaMark" ("MemberMarkId");


CREATE INDEX "IX_CriteriaMeeting_MeetingsId" ON "CriteriaMeeting" ("MeetingsId");


CREATE INDEX "IX_MemberMarks_MemberId" ON "MemberMarks" ("MemberId");


CREATE INDEX "IX_MemberMarks_StudentWorkId" ON "MemberMarks" ("StudentWorkId");


CREATE INDEX "IX_Rule_CriteriaId" ON "Rule" ("CriteriaId");


CREATE INDEX "IX_Rule_CriteriaMarkId" ON "Rule" ("CriteriaMarkId");


CREATE INDEX "IX_StudentWork_MeetingId" ON "StudentWork" ("MeetingId");


CREATE INDEX "IX_Users_MeetingId" ON "Users" ("MeetingId");


CREATE INDEX "IX_Users_RoleId" ON "Users" ("RoleId");


SELECT setval(
               pg_get_serial_sequence('"Role"', 'Id'),
               GREATEST(
                       (SELECT MAX("Id") FROM "Role") + 1,
                       nextval(pg_get_serial_sequence('"Role"', 'Id'))),
               false);
SELECT setval(
               pg_get_serial_sequence('"Users"', 'Id'),
               GREATEST(
                       (SELECT MAX("Id") FROM "Users") + 1,
                       nextval(pg_get_serial_sequence('"Users"', 'Id'))),
               false);