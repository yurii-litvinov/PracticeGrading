CREATE TABLE "Meetings" (
                            "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                            "DateAndTime" timestamp with time zone NOT NULL,
                            "Auditorium" text NOT NULL,
                            "Info" text NOT NULL,
                            "CallLink" text NOT NULL,
                            "MaterialsLink" text NOT NULL,
                            CONSTRAINT "PK_Meetings" PRIMARY KEY ("Id")
);


CREATE TABLE "Roles" (
                         "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                         "RoleName" text NOT NULL,
                         CONSTRAINT "PK_Roles" PRIMARY KEY ("Id")
);


CREATE TABLE "StudentWork" (
                               "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                               "StudentName" text NOT NULL,
                               "Theme" text NOT NULL,
                               "Supervisor" text NOT NULL,
                               "Consultant" text,
                               "Reviewer" text NOT NULL,
                               "SupervisorMark" integer NOT NULL,
                               "ReviewerMark" integer NOT NULL,
                               "FinalMark" integer NOT NULL,
                               "CodeLink" text,
                               "MeetingId" integer NOT NULL,
                               CONSTRAINT "PK_StudentWork" PRIMARY KEY ("Id"),
                               CONSTRAINT "FK_StudentWork_Meetings_MeetingId" FOREIGN KEY ("MeetingId") REFERENCES "Meetings" ("Id") ON DELETE CASCADE
);


CREATE TABLE "Users" (
                         "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                         "UserName" text NOT NULL,
                         "PasswordHash" text,
                         "RoleId" integer NOT NULL,
                         "Discriminator" character varying(8) NOT NULL,
                         "MeetingId" integer,
                         CONSTRAINT "PK_Users" PRIMARY KEY ("Id"),
                         CONSTRAINT "FK_Users_Meetings_MeetingId" FOREIGN KEY ("MeetingId") REFERENCES "Meetings" ("Id") ON DELETE CASCADE,
                         CONSTRAINT "FK_Users_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE
);


CREATE TABLE "MemberMark" (
                              "MemberId" integer NOT NULL,
                              "StudentWorkId" integer NOT NULL,
                              "AverageMark" integer NOT NULL,
                              CONSTRAINT "PK_MemberMark" PRIMARY KEY ("MemberId", "StudentWorkId"),
                              CONSTRAINT "FK_MemberMark_StudentWork_StudentWorkId" FOREIGN KEY ("StudentWorkId") REFERENCES "StudentWork" ("Id") ON DELETE CASCADE,
                              CONSTRAINT "FK_MemberMark_Users_MemberId" FOREIGN KEY ("MemberId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);


CREATE TABLE "Criteria" (
                            "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                            "Name" text NOT NULL,
                            "Comment" text,
                            "Scale" integer[] NOT NULL,
                            "Discriminator" character varying(13) NOT NULL,
                            "Mark" integer,
                            "MemberMarkId" integer,
                            "StudentWorkId" integer,
                            CONSTRAINT "PK_Criteria" PRIMARY KEY ("Id"),
                            CONSTRAINT "FK_Criteria_MemberMark_MemberMarkId_StudentWorkId" FOREIGN KEY ("MemberMarkId", "StudentWorkId") REFERENCES "MemberMark" ("MemberId", "StudentWorkId") ON DELETE CASCADE
);


CREATE TABLE "Rule" (
                        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
                        "Description" text,
                        "Value" integer NOT NULL,
                        "CriteriaId" integer NOT NULL,
                        CONSTRAINT "PK_Rule" PRIMARY KEY ("Id"),
                        CONSTRAINT "FK_Rule_Criteria_CriteriaId" FOREIGN KEY ("CriteriaId") REFERENCES "Criteria" ("Id") ON DELETE CASCADE
);


INSERT INTO "Roles" ("Id", "RoleName")
VALUES (1, 'admin');
INSERT INTO "Roles" ("Id", "RoleName")
VALUES (2, 'member');


INSERT INTO "Users" ("Id", "Discriminator", "PasswordHash", "RoleId", "UserName")
VALUES (1, 'User', '$2a$11$0CCsMkYMzLq/5/tvvlwb/OpAaYuXul1te/yuKAYm9unI5fehP5r82', 1, 'admin');


CREATE INDEX "IX_Criteria_MemberMarkId_StudentWorkId" ON "Criteria" ("MemberMarkId", "StudentWorkId");


CREATE INDEX "IX_MemberMark_StudentWorkId" ON "MemberMark" ("StudentWorkId");


CREATE INDEX "IX_Rule_CriteriaId" ON "Rule" ("CriteriaId");


CREATE INDEX "IX_StudentWork_MeetingId" ON "StudentWork" ("MeetingId");


CREATE INDEX "IX_Users_MeetingId" ON "Users" ("MeetingId");


CREATE INDEX "IX_Users_RoleId" ON "Users" ("RoleId");


SELECT setval(
               pg_get_serial_sequence('"Roles"', 'Id'),
               GREATEST(
                       (SELECT MAX("Id") FROM "Roles") + 1,
                       nextval(pg_get_serial_sequence('"Roles"', 'Id'))),
               false);
SELECT setval(
               pg_get_serial_sequence('"Users"', 'Id'),
               GREATEST(
                       (SELECT MAX("Id") FROM "Users") + 1,
                       nextval(pg_get_serial_sequence('"Users"', 'Id'))),
               false);